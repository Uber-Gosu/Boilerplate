.hidden {
    display: none !important;
    visibility: hidden;
}

.invisible {
    visibility: hidden;
}

.cf, .clearfix {
    *zoom: 1;

    &:before {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
        content: " ";
        display: table;
    }
}

.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.no-bord {
    border: 0 !important;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.text-center {
    text-align: center;
}

.text-justify {
    text-align: justify;
}

$helper_classes: (

    properties: (m, p),

    variants: (

        t: ( 1 0 0 0 ),
        r: ( 0 1 0 0 ),
        b: ( 0 0 1 0 ),
        l: ( 0 0 0 1 ),
        v: ( 1 0 1 0 ),
        h: ( 0 1 0 1 )
    ),

    values: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)

);

$types: map-get($helper_classes, properties);
$variants: map-get($helper_classes, variants);
$values: map-get($helper_classes, values);

@each $propertie in $types {
    @each $variant, $props in $variants {
        @each $value in $values {

            .#{$propertie}#{$variant}#{$value} {

                $top: nth($props, 1);
                @if ($top == 1) {
                    @if ($propertie == m){
                        margin-top: $top * $value + px !important;
                    } @else {
                        padding-top: $top * $value + px !important;
                    }
                }


                $right: nth($props, 2);
                @if ($right == 1) {
                    @if ($propertie == m){
                        margin-right: $right * $value + px !important;
                    } @else {
                        padding-right: $right * $value + px !important;
                    }
                }


                $bottom: nth($props, 3);
                @if ($bottom == 1) {
                    @if ($propertie == m){
                        margin-bottom: $bottom * $value + px !important;
                    } @else {
                        padding-bottom: $bottom * $value + px !important;
                    }
                }


                $left: nth($props, 4);
                @if ($left == 1) {
                    @if ($propertie == m){
                        margin-left: $left * $value + px !important;
                    } @else {
                        padding-left: $left * $value + px !important;
                    }
                }
            }
        }
    }
}